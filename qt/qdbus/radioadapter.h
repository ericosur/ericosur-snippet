/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp radioctrl.xml -i radiocontrol.h -a radioadapter
 *
 * qdbusxml2cpp is Copyright (C) 2015 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef RADIOADAPTER_H
#define RADIOADAPTER_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "radiocontrol.h"
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface local.RadioControl
 */
class RadioControlAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "local.RadioControl")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"local.RadioControl\">\n"
"    <method name=\"onFinishWork\"/>\n"
"    <method name=\"onFinished\"/>\n"
"    <method name=\"getStarted\"/>\n"
"    <method name=\"enableRadio\">\n"
"      <arg direction=\"in\" type=\"b\" name=\"onOff\"/>\n"
"    </method>\n"
"    <method name=\"disableRadio\"/>\n"
"    <method name=\"readRadioInfo\"/>\n"
"    <method name=\"seekRadioUp\"/>\n"
"    <method name=\"seekRadioDown\"/>\n"
"    <method name=\"setFreqval\">\n"
"      <arg direction=\"in\" type=\"u\"/>\n"
"      <arg direction=\"in\" type=\"b\"/>\n"
"    </method>\n"
"    <method name=\"finish\"/>\n"
"    <method name=\"dump_radio_info\"/>\n"
"    <method name=\"fm_val2str\">\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"      <arg direction=\"in\" type=\"u\"/>\n"
"    </method>\n"
"    <method name=\"am_val2str\">\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"      <arg direction=\"in\" type=\"u\"/>\n"
"    </method>\n"
"    <method name=\"setRadioVol\">\n"
"      <arg direction=\"in\" type=\"q\" name=\"vol\"/>\n"
"    </method>\n"
"    <signal name=\"started\"/>\n"
"  </interface>\n"
        "")
public:
    RadioControlAdaptor(QObject *parent);
    virtual ~RadioControlAdaptor();

public: // PROPERTIES
public Q_SLOTS: // METHODS
    QString am_val2str(uint in0);
    void disableRadio();
    void dump_radio_info();
    void enableRadio(bool onOff);
    void finish();
    QString fm_val2str(uint in0);
    void getStarted();
    void onFinishWork();
    void onFinished();
    void readRadioInfo();
    void seekRadioDown();
    void seekRadioUp();
    void setFreqval(uint in0, bool in1);
    void setRadioVol(ushort vol);
Q_SIGNALS: // SIGNALS
    void started();
};

#endif
