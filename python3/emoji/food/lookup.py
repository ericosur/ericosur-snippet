#!/usr/bin/python3
# coding: utf-8
#
# pylint: disable=wrong-import-position
#

'''
picked up some emoji
'''

import sys

sys.path.insert(0, "..")
sys.path.insert(0, "../..")
from myutil import is_file, read_textfile, die
from en_emoji import EMOJI


def logd(*args, **wargs):
    ''' logd '''
    debug = True
    if debug:
        print(*args, **wargs)


class LookupEmoji():
    ''' pick up emojis
    from foods.txt
    look up in en_emoji.py
    '''
    foods_file = "foods.txt"
    files = ["foods.txt", "sorted.txt"]

    def __init__(self):
        self.text_emojis = []
        self.swapped_emojis = {}

    def load_textfile(self, fn):
        ''' load text file '''
        logd(f'load_textfile: fn: {fn}')
        if not is_file(fn):
            die(f"file not found: {fn}")
            return

        tmp = read_textfile(fn)
        self.text_emojis.extend(tmp.splitlines())
        logd("len of self.text_emojis:", len(self.text_emojis))


    def dump_list(self, limit=10):
        ''' dump part '''
        for i in range(limit):
            print(f'{i}: {self.text_emojis[i]}')
        for j in self.text_emojis:
            if not j:
                print(f'why? {j}')


    def dump_dict(self):
        ''' dump dict self.swapped_emojis '''
        for k,v in self.swapped_emojis.items():
            if k is None or v is None:
                print('why? {k} and {v}')

    def wtf(self, the_str):
        ''' wtf '''
        logd('input:', the_str)
        for i in list(the_str):
            h = hex(ord(i))
            print(f'U+{h}', end=' ')
        print()

    def action(self):
        ''' action '''
        for f in self.files:
            self.load_textfile(f)
        the_set = set(self.text_emojis)
        logd("len of the_set:", len(the_set))
        self.text_emojis = list(the_set)
        logd("len of self.text_emojis:", len(self.text_emojis))
        self.dump_list()

        self.swapped_emojis = {value: key for key, value in EMOJI.items()}
        logd("len of self.swapped_emojis:", len(self.swapped_emojis))
        self.dump_dict()

        # will output to file
        outfile = "ofile.py"
        with open(outfile, "wt", encoding='UTF-8') as ofile:
            print("""
'''
generated dict that records text emojis
'''""", file=ofile)
            print('food_emojis = {', file=ofile)
            for k in self.text_emojis:
                if k is None:
                    logd('K is None')
                r = self.swapped_emojis.get(k)
                if r is None:
                    self.wtf(k)
                print(f'"{k}": "{r}",', file=ofile)
            print('}', f'  # generated by {sys.argv[0]}', file=ofile)
        print(f'output to {outfile}')

    @classmethod
    def run(cls):
        ''' run me '''
        obj = cls()
        obj.action()

def main():
    ''' main '''
    LookupEmoji.run()


if __name__ == '__main__':
    main()
