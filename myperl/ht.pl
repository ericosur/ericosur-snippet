#!/usr/bin/perl

# convert my own see.txt into HTML format
# -- Aug 7 1998 by Eric
# init version
# func: read content from \\Desktop\\see*.txt (in unknown order)
# func: output to \\Desktop\\see.html
# func: lines begining 4 minus ``----'' will be change into blank line
# note: only recognized URL like: 'http://', 'ftp://', 'gopher://', 'mailto:'
# func: if output file is newer than source file, no operation done
# -- Aug 8 1998 by Eric
# fix: bug about determine the age of dest and source
# -- Aug 19 1998 by Eric
# add: output message
# add: '-f' switch to force update
# -- Aug 22 1998 by Eric
# add: 'telnet:' and 'news://' protocol
# -- Aug 26 1998 by Eric
# add: ignore string after '#'

use strict;

# settings
my $version = 'Convert my own text memo into HTML format Aug 19 1998 by Eric';
my $see_path = 'c:\\windows\\desktop';
my $tmp_path = 'c:\\tmp';
my $see_html = 'see.htm';

# show the title
print STDERR "$version\n";

@ARGV = ('-') unless @ARGV;

# if lhs is older than rhs
goto OPENFILE if ($ARGV[0] eq '-f');    # don't check time if '-f' specified
if ( -e "$see_path\\$see_html" and (-M "$see_path\\see.txt" >= -M "$tmp_path\\$see_html") ) {
    die "$0: $see_html is up to date, no operation needed.\n";
}

OPENFILE:
# all content send to HERE
open(OUTFILE, "> $tmp_path\\$see_html") or die "cannot output file\n";
my $out_handler = \*OUTFILE;

my $time_stamp_ = &time_stamp;
# output head of HTML file
print $out_handler <<EOF;
<HTML>
<HEAD>
<TITLE>要去看的連結 $time_stamp_</TITLE>
  <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=big5">
<!-- this page is generated by perl script, don't modify! -->
<!-- generated by $version -->
</HEAD>
<BODY>
<FONT SIZE="+0">
EOF

my $cnt = 0;
my $file_name;
chdir $see_path or die "cannot chdir\n";
LOOP:
  foreach $file_name ( <see*.txt> ) {
    print STDERR "$0: process file '$file_name'\n";
    unless ( open(FILE, $file_name) ) {
        warn "$0: Can't open $file_name: $!\n";
        next LOOP;
    }

# output some inner link tags
    print $out_handler <<EOF;
\n<!-- the following links imported from file '$file_name' -->
<H3>$file_name</H3>
<A NAME="$cnt"></A>
<UL>
EOF
    my $illegal = 'x93d2d_s';   # whatever strange char
    my $url = $illegal;
    my $desc = $illegal;
  LINE:
    while (<FILE>) {
        next LINE if /^#/;
        if (/^\s+$/) {
            print $out_handler "<P>";
            next LINE;
        }
        s/^\s+//;
        s/\s+\n$//;
#        print STDERR $_;
        if ( m[(http://.*)|(ftp://.*)|(gopher://.*)|(mailto:.*)|(telnet://.*)|(news://.*)]i ) {
            $url = $&;
        }
        else {
            chomp;
            if ($desc ne $illegal) {    # value already set
                my $old = $desc;
                $desc = $old . $_;   # append new
            }
            else {
                $desc = $_;
            }
        }
        # not both are set
        next LINE if ($url eq $illegal or $desc eq $illegal);
        # output the hyperlink
        print $out_handler "<LI><A HREF=\"$url\">$desc</A></LI>\n";
        # reset $url and $desc
        $url = $illegal;
        $desc = $illegal;
    }   # while ...
    print $out_handler "</UL>\n";
    close(FILE);
    $cnt ++;
  } # foreach ...

# output the tail of HTML file (the blank line is part of output)
# it need use escape char before '@' in e-mail address
print $out_handler <<EOF;

<HR>
Generated time of this document: $time_stamp_<BR>
有任何問題建議請
<A HREF="mailto:ericosur\@tpts5.seed.net.tw?subject=[SeeHTML.pl]">
E-mail
</A>給作者<BR>
Best viewed by <i>ANY</i> browser!
</FONT>
</BODY>
</HTML>
EOF

# to format a time string...
sub time_stamp {
    my ($ss,$mm,$hh,$dd,$MM,$yy,$wd,$yd,$isdst) = localtime(time);
    return sprintf("%4d/%02d/%02d %02d:%02d", 1900+$yy, $MM+1, $dd, $hh, $mm);
}
