#!/usr/bin/env python3
# coding: utf-8

'''
read text format of prime list, and output a python which could
re-generate the list

for some special case to use
'''

# pylint: disable=import-error
# pylint: disable=wrong-import-position

import base64
import bz2
from time import time

from load_myutil import GetConfig

CONFIG_KEY = "small"
MODNAME = "mk-prime-bz2.py"

def wrap_config():
    ''' wrap config and retrieve settings '''
    obj = GetConfig()
    obj.set_configkey(CONFIG_KEY)    # change this to use larger table
    txtfn = obj.get_full_path("txt")
    #pfn = obj.get_full_path("pickle")
    #cpfn = obj.get_full_path("compress_pickle")
    return txtfn

def show_duration(duration):
    ''' show duration '''
    print(f'{MODNAME}: duration: {duration:.3f} sec')

def main():
    ''' main '''
    fn = wrap_config()
    ofn = f'write_{CONFIG_KEY}.py'

    compressed = None
    content = None
    print(f'{MODNAME} read from {fn}...')
    start = time()
    with open(fn, 'rb') as fin:
        content = fin.read()
        print(f'content len: {len(content)}')
        compressed = bz2.compress(content)
        print(f'compressed len: {len(compressed)}')
        print("compressed type:", type(compressed))
    del content

    b64str = base64.b64encode(compressed).decode('utf-8')
    duration = time() - start

    print(f'b64str len: {len(b64str)}')
    #print("b64str type:", type(b64str))

    with open(ofn, 'wt', encoding='utf8') as fobj:
        print('''
#!/usr/bin/env python3
# coding: utf-8

""" this script is generated by mk-prime-bz2.py """

import base64
import bz2

b64str = """''', file=fobj)
        fobj.write(b64str)
        print('''"""
ofn = 'small.txt'
b64bytes = b64str.encode('utf-8')
u64b = base64.b64decode(b64bytes)
uncompress = bz2.decompress(u64b).decode('utf-8')
print(f'len: {len(uncompress)}')
print("type:", type(uncompress))
with open(ofn, 'wt', encoding='utf-8') as fo:
    fo.write(uncompress)
print('output to:', ofn)
''', file=fobj)

    print(f'[INFO] {MODNAME} output to:', ofn)
    show_duration(duration)

if __name__ == '__main__':
    main()
